name: Release

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      forceBuild:
        description: "Force image build"
        required: false
        default: false
        type: boolean

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.github_meta.outputs.image_name }}
      full_image_name: ${{ steps.github_meta.outputs.full_image_name }}
      nginx_tag: ${{ steps.repo.outputs.nginx_tag }}
      build_image: ${{ steps.check.outputs.build_image }}
    steps:
      - name: Prepare GitHub metadata
        id: github_meta
        run: |
          IMAGE_NAME=${GITHUB_REPOSITORY#*/docker-}
          FULL_IMAGE_NAME=${GITHUB_REPOSITORY_OWNER}/${IMAGE_NAME}

          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "full_image_name=${FULL_IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Get Nginx branch metadata
        id: repo
        run: |
          NGINX_TAG=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/nginxinc/docker-nginx '*.*.*' | tail --lines=1 | cut --delimiter='/' --fields=3)

          echo "nginx_tag=${NGINX_TAG}" >> $GITHUB_OUTPUT

      - name: Check if new Docker image should be built
        id: check
        run: |
          BUILD_IMAGE=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.forceBuild == 'true' }}

          docker manifest inspect ghcr.io/${{ steps.github_meta.outputs.full_image_name }}:${{ steps.repo.outputs.nginx_tag }} > /dev/null || BUILD_IMAGE=true

          echo "build_image=${BUILD_IMAGE}" >> $GITHUB_OUTPUT

  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.build_image == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare Docker image metadata
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ needs.setup.outputs.full_image_name }}
          tags: |
            type=raw,value=${{ needs.setup.outputs.nginx_tag }}
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            NGINX_TAG=${{ needs.setup.outputs.nginx_tag }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
